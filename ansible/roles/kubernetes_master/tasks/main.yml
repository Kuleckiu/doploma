---
    - name: Update and upgrade Ubuntu
      apt:
        update_cache: yes
    #     upgrade: dist

    - name: Disable swap
      shell: |
        swapoff -a
        sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    - name: Load kernel modules
      copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter

    - name: Apply kernel modules
      shell: |
        modprobe overlay
        modprobe br_netfilter

    - name: Add kernel parameters for Kubernetes
      copy:
        dest: /etc/sysctl.d/kubernetes.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1

    - name: Reload sysctl
      command: sysctl --system

    - name: Install required packages for containerd
      apt:
        name:
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        state: present

    - name: Install containerd
      apt:
        name: containerd.io
        state: present

    - name: Configure containerd
      shell: |
        containerd config default | tee /etc/containerd/config.toml >/dev/null 2>&1
        sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    - name: Restart and enable containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Install packages for Kubernetes repository
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present

    - name: Add Kubernetes GPG key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes repository
      copy:
        dest: /etc/apt/sources.list.d/kubernetes.list
        content: |
          deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /

    - name: Update apt and install Kubernetes packages
      apt:
        update_cache: yes
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Hold Kubernetes packages
      shell: "apt-mark hold kubelet kubeadm kubectl"
      

    - name: Enable and start kubelet service
      systemd:
        name: kubelet
        state: started
        enabled: yes

    - name: Initialize Kubernetes cluster
      shell: kubeadm init
      register: kubeadm_init
      ignore_errors: yes

    - name: Create .kube directory
      become_user: "{{ ansible_user }}"
      file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        mode: '0755'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Copy Kubernetes admin.conf
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "/home/{{ ansible_user }}/.kube/config"
        remote_src: yes

    - name: Change ownership of .kube/config
      file:
        path: "/home/{{ ansible_user }}/.kube/config"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Apply Calico network plugin
      command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml
      environment:
        KUBECONFIG: "/home/{{ ansible_user }}/.kube/config"

    - name: Restart kubelet service
      systemd:
        name: kubelet
        state: restarted

    
    - name: Enable and start kubelet service
      systemd:
        name: kubelet
        state: started
        enabled: yes

    
    - name: Get join command
      command: kubeadm token create --print-join-command
      register: join_command
      